From e6ceada954d764d93ebd2038cc2f037f0d7c792e Mon Sep 17 00:00:00 2001
From: Pierre-Hugues Husson <phh@phh.me>
Date: Fri, 2 Jun 2023 19:19:31 -0400
Subject: [PATCH 31/52] Try catch around constrainNitsAndBacklightArrays, and
 falls back to dumb curve. It crashes on Xperia 1 IV.

---
 .../server/display/DisplayDeviceConfig.java   | 60 ++++++++++---------
 1 file changed, 33 insertions(+), 27 deletions(-)

diff --git a/services/core/java/com/android/server/display/DisplayDeviceConfig.java b/services/core/java/com/android/server/display/DisplayDeviceConfig.java
index 43725ae0ec03..3f4b39863e15 100644
--- a/services/core/java/com/android/server/display/DisplayDeviceConfig.java
+++ b/services/core/java/com/android/server/display/DisplayDeviceConfig.java
@@ -1910,37 +1910,43 @@ public class DisplayDeviceConfig {
             return;
         }
 
-        // Use the (preferred) display device config mapping
-        final List<Point> points = map.getPoint();
-        final int size = points.size();
-
-        float[] nits = new float[size];
-        float[] backlight = new float[size];
-
-        mInterpolationType = convertInterpolationType(map.getInterpolation());
-        int i = 0;
-        for (Point point : points) {
-            nits[i] = point.getNits().floatValue();
-            backlight[i] = point.getValue().floatValue();
-            if (i > 0) {
-                if (nits[i] < nits[i - 1]) {
-                    Slog.e(TAG, "screenBrightnessMap must be non-decreasing, ignoring rest "
-                            + " of configuration. Nits: " + nits[i] + " < " + nits[i - 1]);
-                    return;
-                }
+        try {
+            // Use the (preferred) display device config mapping
+            final List<Point> points = map.getPoint();
+            final int size = points.size();
+
+            float[] nits = new float[size];
+            float[] backlight = new float[size];
+
+            mInterpolationType = convertInterpolationType(map.getInterpolation());
+            int i = 0;
+            for (Point point : points) {
+                nits[i] = point.getNits().floatValue();
+                backlight[i] = point.getValue().floatValue();
+                if (i > 0) {
+                    if (nits[i] < nits[i - 1]) {
+                        Slog.e(TAG, "screenBrightnessMap must be non-decreasing, ignoring rest "
+                                + " of configuration. Nits: " + nits[i] + " < " + nits[i - 1]);
+                        return;
+                    }
 
-                if (backlight[i] < backlight[i - 1]) {
-                    Slog.e(TAG, "screenBrightnessMap must be non-decreasing, ignoring rest "
-                            + " of configuration. Value: " + backlight[i] + " < "
-                            + backlight[i - 1]);
-                    return;
+                    if (backlight[i] < backlight[i - 1]) {
+                        Slog.e(TAG, "screenBrightnessMap must be non-decreasing, ignoring rest "
+                                + " of configuration. Value: " + backlight[i] + " < "
+                                + backlight[i - 1]);
+                        return;
+                    }
                 }
+                ++i;
             }
-            ++i;
+            mRawNits = nits;
+            mRawBacklight = backlight;
+            constrainNitsAndBacklightArrays();
+        } catch(Throwable t) {
+            mRawNits = null;
+            mRawBacklight = null;
+            setSimpleMappingStrategyValues();
         }
-        mRawNits = nits;
-        mRawBacklight = backlight;
-        constrainNitsAndBacklightArrays();
     }
 
     private Spline loadSdrHdrRatioMap(HighBrightnessMode hbmConfig) {
-- 
2.34.1

