From 2f5cd2d55321e64ca1f53c66794cf351907653b5 Mon Sep 17 00:00:00 2001
From: Andreas Schneider <asn@cryptomilk.org>
Date: Sat, 12 Nov 2022 00:35:46 +0000
Subject: [PATCH 5/8] On Samsung devices, we need to tell Audio HAL if we're
 running narrow band or wide band

Ported to Android 13.

Change-Id: I7802b7a29c017a2cd7018e82772183df1dfa0b89
---
 .../com/android/bluetooth/hfp/HeadsetStateMachine.java    | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/android/app/src/com/android/bluetooth/hfp/HeadsetStateMachine.java b/android/app/src/com/android/bluetooth/hfp/HeadsetStateMachine.java
index b56afd3ee2..b1483b10d6 100644
--- a/android/app/src/com/android/bluetooth/hfp/HeadsetStateMachine.java
+++ b/android/app/src/com/android/bluetooth/hfp/HeadsetStateMachine.java
@@ -141,6 +141,7 @@ class HeadsetStateMachine extends StateMachine {
     private boolean mHasWbsEnabled = false;
     private boolean mHasSwbLc3Enabled = false;
     private boolean mHasSwbAptXEnabled = false;
+    private int mReportScoSampleRate = 0;
     // AT Phone book keeps a group of states used by AT+CPBR commands
     @VisibleForTesting final AtPhonebook mPhonebook;
     // HSP specific
@@ -265,6 +266,7 @@ class HeadsetStateMachine extends StateMachine {
         mHasNrecEnabled = false;
         mHasSwbLc3Enabled = false;
         mHasSwbAptXEnabled = false;
+        mReportScoSampleRate = 0;
     }
 
     public void dump(StringBuilder sb) {
@@ -565,6 +567,7 @@ class HeadsetStateMachine extends StateMachine {
             mHasSwbLc3Enabled = false;
             mHasNrecEnabled = false;
             mHasSwbAptXEnabled = false;
+            mReportScoSampleRate = 0;
 
             broadcastStateTransitions();
             logFailureIfNeeded();
@@ -1874,6 +1877,9 @@ class HeadsetStateMachine extends StateMachine {
             am.setParameters("bt_swb=" + (mHasSwbAptXEnabled ? "0" : "65535"));
         }
         am.setBluetoothHeadsetProperties(getCurrentDeviceName(), mHasNrecEnabled, mHasWbsEnabled);
+        if (mReportScoSampleRate > 0) {
+            am.setParameters("g_sco_samplerate=" + mReportScoSampleRate);
+        }
     }
 
     @VisibleForTesting
@@ -2020,6 +2026,7 @@ class HeadsetStateMachine extends StateMachine {
         switch (wbsConfig) {
             case HeadsetHalConstants.BTHF_WBS_YES:
                 mHasWbsEnabled = true;
+                mReportScoSampleRate = 16000;
                 if (Flags.hfpCodecAptxVoice() && mHeadsetService.isAptXSwbEnabled()) {
                     mHasSwbAptXEnabled = false;
                 }
@@ -2027,6 +2034,7 @@ class HeadsetStateMachine extends StateMachine {
             case HeadsetHalConstants.BTHF_WBS_NO:
             case HeadsetHalConstants.BTHF_WBS_NONE:
                 mHasWbsEnabled = false;
+                mReportScoSampleRate = 8000;
                 break;
             default:
                 Log.e(TAG, "processWBSEvent: unknown wbsConfig " + wbsConfig);
-- 
2.34.1

