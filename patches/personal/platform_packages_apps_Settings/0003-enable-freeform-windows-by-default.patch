From 6f0fda8039e5a5719eb70582827d223232225b38 Mon Sep 17 00:00:00 2001
From: Archfx <cybx@live.com>
Date: Wed, 10 Jul 2024 14:04:15 -0400
Subject: [PATCH] enable freeform windows by default

Change-Id: I1da8649f2ef7bb90500a3f8a17dde2251da4d8ec
---
 .../FreeformWindowsPreferenceController.java           | 10 +++++-----
 .../NonResizableMultiWindowPreferenceController.java   | 10 +++++-----
 .../ResizableActivityPreferenceController.java         | 10 +++++-----
 3 files changed, 15 insertions(+), 15 deletions(-)

diff --git a/src/com/android/settings/development/FreeformWindowsPreferenceController.java b/src/com/android/settings/development/FreeformWindowsPreferenceController.java
index 872c046545a..1922d2853db 100644
--- a/src/com/android/settings/development/FreeformWindowsPreferenceController.java
+++ b/src/com/android/settings/development/FreeformWindowsPreferenceController.java
@@ -57,7 +57,7 @@ public class FreeformWindowsPreferenceController extends DeveloperOptionsPrefere
         final boolean isEnabled = (Boolean) newValue;
         Settings.Global.putInt(mContext.getContentResolver(),
                 Settings.Global.DEVELOPMENT_ENABLE_FREEFORM_WINDOWS_SUPPORT,
-                isEnabled ? SETTING_VALUE_ON : SETTING_VALUE_OFF);
+                isEnabled ? SETTING_VALUE_ON : SETTING_VALUE_ON);
         if (isEnabled) {
             RebootConfirmationDialogFragment.show(
                     mFragment, R.string.reboot_dialog_enable_freeform_support, this);
@@ -68,16 +68,16 @@ public class FreeformWindowsPreferenceController extends DeveloperOptionsPrefere
     @Override
     public void updateState(Preference preference) {
         final int mode = Settings.Global.getInt(mContext.getContentResolver(),
-                Settings.Global.DEVELOPMENT_ENABLE_FREEFORM_WINDOWS_SUPPORT, SETTING_VALUE_OFF);
-        ((TwoStatePreference) mPreference).setChecked(mode != SETTING_VALUE_OFF);
+                Settings.Global.DEVELOPMENT_ENABLE_FREEFORM_WINDOWS_SUPPORT, SETTING_VALUE_ON);
+        ((TwoStatePreference) mPreference).setChecked(true);
     }
 
     @Override
     protected void onDeveloperOptionsSwitchDisabled() {
         super.onDeveloperOptionsSwitchDisabled();
         Settings.Global.putInt(mContext.getContentResolver(),
-                Settings.Global.DEVELOPMENT_ENABLE_FREEFORM_WINDOWS_SUPPORT, SETTING_VALUE_OFF);
-        ((TwoStatePreference) mPreference).setChecked(false);
+                Settings.Global.DEVELOPMENT_ENABLE_FREEFORM_WINDOWS_SUPPORT, SETTING_VALUE_ON);
+        ((TwoStatePreference) mPreference).setChecked(true);
     }
 
     @VisibleForTesting
diff --git a/src/com/android/settings/development/NonResizableMultiWindowPreferenceController.java b/src/com/android/settings/development/NonResizableMultiWindowPreferenceController.java
index 50d90bdb3e6..7b0cd75fc14 100644
--- a/src/com/android/settings/development/NonResizableMultiWindowPreferenceController.java
+++ b/src/com/android/settings/development/NonResizableMultiWindowPreferenceController.java
@@ -58,22 +58,22 @@ public class NonResizableMultiWindowPreferenceController
         final boolean isEnabled = (Boolean) newValue;
         Settings.Global.putInt(mContext.getContentResolver(),
                 DEVELOPMENT_ENABLE_NON_RESIZABLE_MULTI_WINDOW,
-                isEnabled ? SETTING_VALUE_ON : SETTING_VALUE_OFF);
+                isEnabled ? SETTING_VALUE_ON : SETTING_VALUE_ON);
         return true;
     }
 
     @Override
     public void updateState(Preference preference) {
         final int mode = Settings.Global.getInt(mContext.getContentResolver(),
-                DEVELOPMENT_ENABLE_NON_RESIZABLE_MULTI_WINDOW, SETTING_VALUE_OFF);
-        ((TwoStatePreference) mPreference).setChecked(mode != SETTING_VALUE_OFF);
+                DEVELOPMENT_ENABLE_NON_RESIZABLE_MULTI_WINDOW, SETTING_VALUE_ON);
+        ((TwoStatePreference) mPreference).setChecked(true);
     }
 
     @Override
     protected void onDeveloperOptionsSwitchDisabled() {
         super.onDeveloperOptionsSwitchDisabled();
         Settings.Global.putInt(mContext.getContentResolver(),
-                DEVELOPMENT_ENABLE_NON_RESIZABLE_MULTI_WINDOW, SETTING_VALUE_OFF);
-        ((TwoStatePreference) mPreference).setChecked(false);
+                DEVELOPMENT_ENABLE_NON_RESIZABLE_MULTI_WINDOW, SETTING_VALUE_ON);
+        ((TwoStatePreference) mPreference).setChecked(true);
     }
 }
diff --git a/src/com/android/settings/development/ResizableActivityPreferenceController.java b/src/com/android/settings/development/ResizableActivityPreferenceController.java
index 28b1478d49e..9e8935056dd 100644
--- a/src/com/android/settings/development/ResizableActivityPreferenceController.java
+++ b/src/com/android/settings/development/ResizableActivityPreferenceController.java
@@ -50,22 +50,22 @@ public class ResizableActivityPreferenceController extends DeveloperOptionsPrefe
         final boolean isEnabled = (Boolean) newValue;
         Settings.Global.putInt(mContext.getContentResolver(),
                 Settings.Global.DEVELOPMENT_FORCE_RESIZABLE_ACTIVITIES,
-                isEnabled ? SETTING_VALUE_ON : SETTING_VALUE_OFF);
+                isEnabled ? SETTING_VALUE_ON : SETTING_VALUE_ON);
         return true;
     }
 
     @Override
     public void updateState(Preference preference) {
         final int mode = Settings.Global.getInt(mContext.getContentResolver(),
-                Settings.Global.DEVELOPMENT_FORCE_RESIZABLE_ACTIVITIES, SETTING_VALUE_OFF);
-        ((TwoStatePreference) mPreference).setChecked(mode != SETTING_VALUE_OFF);
+                Settings.Global.DEVELOPMENT_FORCE_RESIZABLE_ACTIVITIES, SETTING_VALUE_ON);
+        ((TwoStatePreference) mPreference).setChecked(true);
     }
 
     @Override
     protected void onDeveloperOptionsSwitchDisabled() {
         super.onDeveloperOptionsSwitchDisabled();
         Settings.Global.putInt(mContext.getContentResolver(),
-                Settings.Global.DEVELOPMENT_FORCE_RESIZABLE_ACTIVITIES, SETTING_VALUE_OFF);
-        ((TwoStatePreference) mPreference).setChecked(false);
+                Settings.Global.DEVELOPMENT_FORCE_RESIZABLE_ACTIVITIES, SETTING_VALUE_ON);
+        ((TwoStatePreference) mPreference).setChecked(true);
     }
 }
-- 
2.34.1

