From 2bf82017a069a3f440919cbc1dee8d24911d3d13 Mon Sep 17 00:00:00 2001
From: Alberto Ponces <ponces26@gmail.com>
Date: Sun, 12 Nov 2023 11:24:17 +0000
Subject: [PATCH] feat: Add Lockscreen Weather with OmniJaws (2/2)

Based on OmniROM's implementation, updated by @maxwen and adapted by @neobuddy89.

Change-Id: I138c0dc94f08142f6614659037a501d6ae8909b1
Co-authored-by: maxwen <max.weninger@gmail.com>
Co-authored-by: Pranav Vashi <neobuddy89@gmail.com>
---
 res/values/strings.xml                        |  5 ++
 res/xml/security_lockscreen_settings.xml      |  7 ++
 ...LockScreenWeatherPreferenceController.java | 79 +++++++++++++++++++
 .../security/LockscreenDashboardFragment.java | 25 +++++-
 4 files changed, 115 insertions(+), 1 deletion(-)
 create mode 100644 src/com/android/settings/omnijaws/LockScreenWeatherPreferenceController.java

diff --git a/res/values/strings.xml b/res/values/strings.xml
index f92fd2a..39e8134 100644
--- a/res/values/strings.xml
+++ b/res/values/strings.xml
@@ -12411,6 +12411,11 @@
         <item quantity="other"><xliff:g id="first">%1$s</xliff:g>, <xliff:g id="second">%2$s</xliff:g></item>
     </plurals>
 
+    <!-- Weather -->
+    <string name="lockscreen_weather_title">Weather update</string>
+    <string name="lockscreen_weather_summary">Display current weather update</string>
+    <string name="lockscreen_weather_enabled_info">Requires weather service to be enabled</string>
+
     <!-- Title for RTT setting. [CHAR LIMIT=NONE] -->
     <string name="rtt_settings_title"></string>
     <!-- Subtext for showing the option of RTT setting. [CHAR LIMIT=NONE] -->
diff --git a/res/xml/security_lockscreen_settings.xml b/res/xml/security_lockscreen_settings.xml
index 15d5303..3712b41 100644
--- a/res/xml/security_lockscreen_settings.xml
+++ b/res/xml/security_lockscreen_settings.xml
@@ -81,6 +81,13 @@
             android:title="@string/lockscreen_double_line_clock_setting_toggle"
             android:summary="@string/lockscreen_double_line_clock_summary"
             settings:controller="com.android.settings.display.LockscreenClockPreferenceController" />
+
+        <com.android.settingslib.PrimarySwitchPreference
+            android:key="lockscreen_weather_enabled"
+            android:title="@string/lockscreen_weather_title"
+            android:summary="@string/lockscreen_weather_summary"
+            settings:controller="com.android.settings.omnijaws.LockScreenWeatherPreferenceController" />
+
     </PreferenceCategory>
 
     <PreferenceCategory
diff --git a/src/com/android/settings/omnijaws/LockScreenWeatherPreferenceController.java b/src/com/android/settings/omnijaws/LockScreenWeatherPreferenceController.java
new file mode 100644
index 0000000..5420944
--- /dev/null
+++ b/src/com/android/settings/omnijaws/LockScreenWeatherPreferenceController.java
@@ -0,0 +1,79 @@
+/*
+ * Copyright (C) 2023 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.settings.omnijaws;
+
+import static com.android.internal.util.crdroid.OmniJawsClient.SERVICE_PACKAGE;
+
+import android.content.Context;
+import android.content.Intent;
+import android.os.UserHandle;
+import android.provider.Settings;
+
+import androidx.preference.Preference;
+
+import com.android.settings.core.TogglePreferenceController;
+
+/** Controller to update the lockscreen weather widget state */
+public class LockScreenWeatherPreferenceController extends TogglePreferenceController {
+    private static final int ON = 1;
+    private static final int OFF = 0;
+    private static final int DEFAULT = OFF;
+
+    public LockScreenWeatherPreferenceController(Context context, String preferenceKey) {
+        super(context, preferenceKey);
+    }
+
+    @Override
+    public int getAvailabilityStatus() {
+        return AVAILABLE;
+    }
+
+    @Override
+    public boolean isChecked() {
+        return Settings.System.getIntForUser(mContext.getContentResolver(),
+                Settings.System.LOCKSCREEN_WEATHER_ENABLED, DEFAULT, UserHandle.USER_CURRENT) == ON;
+    }
+
+    @Override
+    public boolean setChecked(boolean isChecked) {
+        return Settings.System.putIntForUser(mContext.getContentResolver(),
+                Settings.System.LOCKSCREEN_WEATHER_ENABLED, isChecked ? ON : OFF, UserHandle.USER_CURRENT);
+    }
+
+    @Override
+    public boolean handlePreferenceTreeClick(Preference preference) {
+        if (getPreferenceKey().equals(preference.getKey())) {
+            Intent intent = new Intent(Intent.ACTION_MAIN);
+            intent.setClassName(SERVICE_PACKAGE, SERVICE_PACKAGE + ".SettingsActivity");
+            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+            mContext.startActivity(intent);
+            return true;
+        }
+        return super.handlePreferenceTreeClick(preference);
+    }
+
+    @Override
+    public final boolean isSliceable() {
+        return false;
+    }
+
+    @Override
+    public int getSliceHighlightMenuRes() {
+        // not needed since it's not sliceable
+        return NO_RES;
+    }
+}
diff --git a/src/com/android/settings/security/LockscreenDashboardFragment.java b/src/com/android/settings/security/LockscreenDashboardFragment.java
index 2e4a1f2..499fc2c 100644
--- a/src/com/android/settings/security/LockscreenDashboardFragment.java
+++ b/src/com/android/settings/security/LockscreenDashboardFragment.java
@@ -31,6 +31,8 @@ import android.provider.Settings;
 
 import androidx.annotation.VisibleForTesting;
 
+import com.android.internal.util.crdroid.OmniJawsClient;
+
 import com.android.settings.R;
 import com.android.settings.dashboard.DashboardFragment;
 import com.android.settings.display.AmbientDisplayAlwaysOnPreferenceController;
@@ -40,6 +42,7 @@ import com.android.settings.gestures.PickupGesturePreferenceController;
 import com.android.settings.notification.LockScreenNotificationPreferenceController;
 import com.android.settings.search.BaseSearchIndexProvider;
 import com.android.settings.security.screenlock.LockScreenPreferenceController;
+import com.android.settingslib.PrimarySwitchPreference;
 import com.android.settingslib.core.AbstractPreferenceController;
 import com.android.settingslib.core.lifecycle.Lifecycle;
 import com.android.settingslib.search.SearchIndexable;
@@ -69,13 +72,16 @@ public class LockscreenDashboardFragment extends DashboardFragment
     @VisibleForTesting
     static final String KEY_ADD_USER_FROM_LOCK_SCREEN =
             "security_lockscreen_add_users_when_locked";
-
+    static final String KEY_WEATHER = "lockscreen_weather_enabled";
 
     private AmbientDisplayConfiguration mConfig;
     private OwnerInfoPreferenceController mOwnerInfoPreferenceController;
     @VisibleForTesting
     ContentObserver mControlsContentObserver;
 
+    private PrimarySwitchPreference mWeather;
+    private OmniJawsClient mWeatherClient;
+
     @Override
     public int getMetricsCategory() {
         return SettingsEnums.SETTINGS_LOCK_SCREEN_PREFERENCES;
@@ -94,6 +100,9 @@ public class LockscreenDashboardFragment extends DashboardFragment
                 R.string.locked_work_profile_notification_title);
         replaceEnterpriseStringTitle("security_setting_lock_screen_notif_work_header",
                 WORK_PROFILE_NOTIFICATIONS_SECTION_HEADER, R.string.profile_section_header);
+        mWeather = (PrimarySwitchPreference) findPreference(KEY_WEATHER);
+        mWeatherClient = new OmniJawsClient(getContext());
+        updateWeatherSettings();
     }
 
     @Override
@@ -193,4 +202,18 @@ public class LockscreenDashboardFragment extends DashboardFragment
                             .isAvailable();
                 }
             };
+
+    private void updateWeatherSettings() {
+        if (mWeatherClient == null || mWeather == null) return;
+        boolean weatherEnabled = mWeatherClient.isOmniJawsEnabled();
+        mWeather.setSwitchEnabled(weatherEnabled);
+        mWeather.setSummary(weatherEnabled ? R.string.lockscreen_weather_summary :
+            R.string.lockscreen_weather_enabled_info);
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        updateWeatherSettings();
+    }
 }
-- 
2.34.1

